FROM node:18.8-alpine3.15 as builder

# Args
ARG WORKDIR

# Env
ENV NODE_ENV=development

WORKDIR ${WORKDIR}

RUN yarn global add @nestjs/cli

COPY lerna.json .

COPY package.json .
COPY yarn.lock .

COPY packages/common/package.json ./packages/common/package.json

COPY packages/api/package.json ./packages/api/package.json

RUN yarn install
RUN npx lerna bootstrap

# Copy project
COPY . .

# Build
RUN npx lerna run build --scope @monorepo/common

RUN npx lerna link

RUN npx lerna run build --scope @monorepo/api

RUN yarn install --production --frozen-lockfile --ignore-scripts --prefer-offline

# Runner 
FROM node:18.8-alpine3.15 as runner 

# Args
ARG WORKDIR

# Env
ENV NODE_ENV=production

# Init
WORKDIR ${WORKDIR}

# RUN addgroup -g 1001 -S nodejs
# RUN adduser -S nestjs -u 1001

COPY --from=builder ${WORKDIR}/lerna.json .

COPY --from=builder ${WORKDIR}/package.json . 
COPY --from=builder ${WORKDIR}/yarn.lock .

COPY --from=builder ${WORKDIR}/node_modules ./node_modules

COPY --from=builder ${WORKDIR}/packages/common/dist ./packages/common/dist
COPY --from=builder ${WORKDIR}/packages/common/package.json ./packages/common/package.json
COPY --from=builder ${WORKDIR}/packages/common/node_modules ./packages/common/node_modules

# COPY --from=builder --chown=nextjs:nodejs ${WORKDIR}/packages/api/dist ./packages/api/dist
COPY --from=builder ${WORKDIR}/packages/api/dist ./packages/api/dist
COPY --from=builder ${WORKDIR}/packages/api/package.json ./packages/api/package.json
COPY --from=builder ${WORKDIR}/packages/api/node_modules ./packages/api/node_modules

RUN mkdir packages/api/static && mkdir packages/api/static/images

# USER nestjs

EXPOSE ${PORT}

# Run
CMD npx lerna link && npx lerna run start:prod --scope @monorepo/api